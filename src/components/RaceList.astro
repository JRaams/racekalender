---
import { Icon } from 'astro-icon/components';
import type { Race } from '~/types';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import TimeDisplay from './TimeDisplay.svelte';
import TimeDistanceDisplay from './TimeDistanceDisplay.svelte';
import { TypeToIconMap } from '~/types/eventtype';

type Props = {
  showKind: boolean;
  races: Race[];
};

const { races } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<script>
  import dayjs from 'dayjs';

  // window.addEventListener('DOMContentLoaded', () => {
  //   document.querySelectorAll('.race-list-row').forEach((tr) => {
  //     const timestamp = Number(tr.getAttribute('data-timestamp'));
  //     const date = dayjs(timestamp);

  //     if (date.isBefore(new Date(), 'days')) {
  //       tr.classList.add('past');
  //     } else if (date.isSame(new Date(), 'days')) {
  //       tr.classList.add('today');
  //     }
  //   });
  // });
</script>

<div class="overflow-auto">
  <table>
    <thead>
      <tr>
        <th scope="col">{t('list.table.name')}</th>
        <th scope="col">{t('list.table.circuit')}</th>
      </tr>
    </thead>
    <tbody>
      {
        races.map((race) => (
          <>
            <tr class="race-list-row">
              <td data-col={t('list.table.name')}>
                {race.round}. {race.name.replace('FORMULA 1', '').replace(' 2024', '')}
              </td>
              <td class="no-wrap" data-col={t('list.table.circuit')}>
                <div class="flex-row">
                  {<Icon name={'flagpack:' + race.circuit.countryCode.toLowerCase()} size={32} />}
                  <div class="flex-col">
                    <span>{race.circuit.name}</span>
                    <small>
                      {race.circuit.city},{race.circuit.region && ` ${race.circuit.region}, `}
                      {race.circuit.country}
                    </small>
                  </div>
                </div>
              </td>
            </tr>

            <tr>
              <th class="race-event" colspan="2">
                <div>
                  <strong>Type</strong>
                  <strong>Laps</strong>
                  <strong>Time</strong>
                </div>
              </th>
            </tr>
            {race.events.map((e) => (
              <tr>
                <td class="race-event" colspan="2">
                  <div>
                    <span>
                      <Icon name={TypeToIconMap[e.type] ?? 'material-symbols:brightness-empty'} size={16} />
                      {e.name.split(' - ')[0]}
                    </span>
                    <small>{!!e.laps ? `${e.laps} laps` : '-'}</small>
                    <TimeDisplay {lang} timestamp={e.startAt} />
                  </div>
                </td>
              </tr>
              // TODO: Remove split(' - ')
            ))}
          </>
        ))
      }
    </tbody>
  </table>
</div>

<style scoped>
  .no-wrap {
    white-space: nowrap;
  }

  tr.past {
    filter: opacity(0.34);
  }
  tr.today {
    background: linear-gradient(
      -45deg,
      var(--pico-color-jade-200),
      var(--pico-color-green-200),
      var(--pico-color-lime-200),
      var(--pico-color-amber-250)
    );
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }
  tr.today td {
    background: transparent;
    --pico-color: var(--pico-color-slate-800);
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .flex-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.75em;
  }

  .flex-col {
    display: flex;
    flex-direction: column;
  }

  svg {
    filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.25));
  }

  .race-event {
    padding: 4px 2em;

    div {
      display: grid;
      gap: 0 1rem;
      grid-template-columns: 250px 250px 1fr;
    }

    span {
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
    }
  }
</style>
