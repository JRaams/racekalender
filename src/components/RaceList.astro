---
import { Icon } from 'astro-icon/components';
import type { Race } from '~/types';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import TimeDistance from './TimeDistance.svelte';

type Props = {
  races: Race[];
}

const { races } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<script>
  import dayjs from 'dayjs';

  window.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.race-list-row').forEach(tr => {
      const timestamp = Number(tr.getAttribute('data-timestamp'));
      const date = dayjs(timestamp);
      
      if (date.isBefore(new Date(), 'days')) {
        tr.classList.add('past');
      } else if (date.isSame(new Date(), 'days')) {
        tr.classList.add('today');
      }
    })
  })
</script>

<div class="overflow-auto">
  <table>
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">{t('list.table.name')}</th>
        <th scope="col">{t('list.table.date')}</th>
        <th scope="col">{t('list.table.circuit')}</th>
      </tr>
    </thead>
    <tbody>
      {
        races.map(race => 
          <tr class="race-list-row" data-timestamp={race.raceTimestamp}>
            <td data-col={t('list.table.round')}>{race.round}</td>
            <td data-col={t('list.table.name')}>{t(race.name as any)}</td>
            <td style="min-height: 4em;" data-col={t('list.table.date')}>
              <TimeDistance client:only="svelte" timestamp={race.raceTimestamp} lang={lang}/>
            </td>
            <td data-col={t('list.table.circuit')}>
              <div class="flex-row">
                { 
                  <Icon name={'flagpack:' + race.circuit.countryCode} size={32} />
                }
                <div class="flex-col">
                  <span>{race.circuit.name}</span>
                  <small>{race.circuit.city}, {t(race.circuit.country as any)}</small>
                </div>
              </div>
            </td>
          </tr>
        )
      }
    </tbody>
  </table>
</div>

<style scoped>
  @media screen and (max-width: 1024px) {
    table {
      thead {
        display: none;
      }

    }

    tbody {
      tr {
        display: flex;
        flex-direction: column;
        margin-bottom: 1em;
        border-radius: 4px;
        border: 2px solid var(--pico-contrast-focus);

        td {
          display: grid;
          grid-template-columns: 70px 1fr;
          place-items: center start;
          
          &:last-child {
            border-bottom: none;
          }

          &::before {
            content: attr(data-col);
            font-weight: bold;
          }
        }
      }
    }
  }

  tr.past {
    --pico-background-color: var(--pico-card-border-color);
  }
  tr.today {
    background: linear-gradient(-45deg, var(--pico-color-jade-200), var(--pico-color-green-200), var(--pico-color-lime-200), var(--pico-color-amber-250));
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }
  tr.today td {
    background: transparent;
    --pico-color: var(--pico-color-slate-800);
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .flex-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.75em;
  }

  .flex-col {
    display: flex;
    flex-direction: column;
  }
</style>