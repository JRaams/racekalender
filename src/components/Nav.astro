---
import { kinds } from '~/types';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import LangSwitcher from './LangSwitcher.astro';
import ThemeSwitcher from './ThemeSwitcher.astro';

const params = Astro.params;
const kind = params.kind;
const lang = getLangFromUrl(Astro.url);

const t = useTranslations(lang);
---

<nav>
  <ul>
    <li class="mobile">
      <label id="hamburger-icon" for="nav-toggle">
        <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <title>Menu Open</title>
          <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
        </svg>
      </label>
    </li>

    <li>
      <a href={'/' + lang + '/'} class="secondary">
        <strong>{t('nav.title')}</strong>
      </a>
    </li>

    {
      kinds.map((x) => (
        <li class="desktop">
          <a href={'/' + lang + '/' + x} aria-current={kind === x}>
            {t(('kind.' + x) as any)}
          </a>
        </li>
      ))
    }
  </ul>

  <ul>
    <li style="display: flex; align-items: center;"><LangSwitcher /></li>
    <li><ThemeSwitcher /></li>
  </ul>
</nav>

<input id="nav-toggle" type="checkbox" />
<div class="mobile-nav-items">
  <ul>
    {
      kinds.map((x) => (
        <li>
          <a href={'/' + lang + '/' + x} aria-current={kind === x}>
            {t(('kind.' + x) as any)}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<style scoped>
  #nav-toggle {
    display: none;
  }

  #hamburger-icon {
    margin-bottom: 3px;
  }

  #hamburger-icon svg {
    height: 17px;
    width: auto;
  }

  input#nav-toggle:checked ~ .mobile-nav-items {
    max-height: 150px;
  }

  .mobile-nav-items {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.25s ease;
  }

  .mobile-nav-items ul {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1em;
    margin-block: var(--pico-block-spacing-vertical);
    padding: 0;
  }

  .mobile-nav-items ul li {
    list-style: none;
  }

  .mobile {
    display: initial;
  }
  .desktop {
    display: none;
  }
  @media screen and (min-width: 768px) {
    .mobile {
      display: none !important;
    }
    .desktop {
      display: initial;
    }
  }
</style>
